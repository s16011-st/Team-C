Q1. どんな作業フローを使ったか？なぜその作業フローを選んだか？
  リーダー決定
  リポジトリ作成
  メンバーをCollaboratorに登録
  発表用ファイルを作成（編集するパートを決めた）
  github上で共同編集
  
　<理由>
　mergeが簡単そうだったから(conflictが発生しなさそうだったから)
　連絡ややりとりをせずに編集が決定するから

Q2. 作業はどのように進めたか？
　ファイルにメモを残して連絡
　
Q3. どんなトラブルに遭遇したか？どのようにトラブルを解決したか？
　そもそもgithubを見てないと連絡がとれない
　テーマに興味が無いと作業が進まない
　日本人と中国人で笑いのツボが違う？

Q4. Githubを使った開発を通じて、気づいたことなど
gzbwilliam:

Wangzisheng:

lizelong:
先週システムエラーしました
CentOSのインストールからスタット
gitをインストール
yum install git git-gui
sshを獲得
ssh-keygen -t rsa -C "s16004@st.kic.ac.jp"
.ssh/id_rsa.oubの内容をサイトへコピー
githubとの接続をテスト
ssh git@github.com
gitユーザーの設定
git config --global user.name "lizelong1988"
git config --global user.email "s16004@st.kic.ac.jp"

TEAM-Cのファイルを自分のパソコンへ
git clone git@github.com:s16011-st/Team-C.git

最後　git add , git commit ,git pushを使って
物語の作成とアップロードしました

s16011:
  git clone, git branch, git push, pull request, marge, deployなど、
  一切使わずにファイルを作成してしまったことが心残り。
  google driveでもできたことをわざわざgithubでやってしまった。
  他人の興味を引くテーマでないと開発が進まないことがわかった。
  
